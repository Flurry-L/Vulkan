#pragma optionNV(inline all)
#extension GL_ARB_gpu_shader_int64 : require
#extension GL_NV_shader_atomic_int64 : require
void CAS(inout uint64_t z0, inout uint64_t z1) {
    if (z0 < z1) {
        uint64_t temp = z0;
        z0 = z1;
        z1 = temp;
    }
}

void bubbleSort(inout uint64_t arr[32]) {
    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);
    CAS(arr[21], arr[22]);
    CAS(arr[22], arr[23]);
    CAS(arr[23], arr[24]);
    CAS(arr[24], arr[25]);
    CAS(arr[25], arr[26]);
    CAS(arr[26], arr[27]);
    CAS(arr[27], arr[28]);
    CAS(arr[28], arr[29]);
    CAS(arr[29], arr[30]);
    CAS(arr[30], arr[31]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);
    CAS(arr[21], arr[22]);
    CAS(arr[22], arr[23]);
    CAS(arr[23], arr[24]);
    CAS(arr[24], arr[25]);
    CAS(arr[25], arr[26]);
    CAS(arr[26], arr[27]);
    CAS(arr[27], arr[28]);
    CAS(arr[28], arr[29]);
    CAS(arr[29], arr[30]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);
    CAS(arr[21], arr[22]);
    CAS(arr[22], arr[23]);
    CAS(arr[23], arr[24]);
    CAS(arr[24], arr[25]);
    CAS(arr[25], arr[26]);
    CAS(arr[26], arr[27]);
    CAS(arr[27], arr[28]);
    CAS(arr[28], arr[29]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);
    CAS(arr[21], arr[22]);
    CAS(arr[22], arr[23]);
    CAS(arr[23], arr[24]);
    CAS(arr[24], arr[25]);
    CAS(arr[25], arr[26]);
    CAS(arr[26], arr[27]);
    CAS(arr[27], arr[28]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);
    CAS(arr[21], arr[22]);
    CAS(arr[22], arr[23]);
    CAS(arr[23], arr[24]);
    CAS(arr[24], arr[25]);
    CAS(arr[25], arr[26]);
    CAS(arr[26], arr[27]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);
    CAS(arr[21], arr[22]);
    CAS(arr[22], arr[23]);
    CAS(arr[23], arr[24]);
    CAS(arr[24], arr[25]);
    CAS(arr[25], arr[26]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);
    CAS(arr[21], arr[22]);
    CAS(arr[22], arr[23]);
    CAS(arr[23], arr[24]);
    CAS(arr[24], arr[25]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);
    CAS(arr[21], arr[22]);
    CAS(arr[22], arr[23]);
    CAS(arr[23], arr[24]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);
    CAS(arr[21], arr[22]);
    CAS(arr[22], arr[23]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);
    CAS(arr[21], arr[22]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);
    CAS(arr[20], arr[21]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);
    CAS(arr[19], arr[20]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);
    CAS(arr[18], arr[19]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);
    CAS(arr[17], arr[18]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);
    CAS(arr[16], arr[17]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);
    CAS(arr[15], arr[16]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);
    CAS(arr[14], arr[15]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);
    CAS(arr[13], arr[14]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);
    CAS(arr[12], arr[13]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);
    CAS(arr[11], arr[12]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);
    CAS(arr[10], arr[11]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);
    CAS(arr[9], arr[10]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);
    CAS(arr[8], arr[9]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);
    CAS(arr[7], arr[8]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);
    CAS(arr[6], arr[7]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);
    CAS(arr[5], arr[6]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);
    CAS(arr[4], arr[5]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);
    CAS(arr[3], arr[4]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);
    CAS(arr[2], arr[3]);

    CAS(arr[0], arr[1]);
    CAS(arr[1], arr[2]);

    CAS(arr[0], arr[1]);

    CAS(arr[0], arr[1]);
}
